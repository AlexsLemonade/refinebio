# This setup is common for every test.
# For an explanation of how this YAML feature works, see:
# https://circleci.com/blog/circleci-hacks-reuse-yaml-in-your-circleci-config-with-yaml/
common_setup: &common_setup
  - checkout

  # Setup Postgres in a Container
  - run: ./run_postgres.sh
  # Let Postgres start up.
  - run: sleep 30
  # Finish setting up Postgres now that it's running.
  - run: ./common/install_db_docker.sh

  # Install our application. Provides the data_refinery_common package for the other images.
  - run: chmod -R a+wr common
  - run: ./update_models.sh

version: 2
jobs:
  # This runs api, common, foreman, and end-to-end tests.
  # These are grouped together because in total they take less time than our other tests individually.
  main_tests:
    working_directory: ~/refinebio
    machine: true
    steps:
      <<: *common_setup

      # Install Nomad
      - run: sudo ./install_nomad.sh

      # Start Nomad, build images, and register jobs.
      - run:
          command: sudo -E ./run_nomad.sh -e test

      # Run API Tests.
      - run: ./api/run_tests.sh

      # Run Common Tests.
      - run: ./common/run_tests.sh

      # Run Downloader Tests
      - run: ./workers/prepare_image.sh -i downloaders
      - run: .circleci/filter_tests.sh -t downloaders

      - run: ./workers/prepare_image.sh -i no_op

      # Push the no_op and downloader images to the local docker repo so Nomad
      # can pullfrom there when running end-to-end tests.
      - run: docker tag ccdl/dr_downloaders localhost:5000/dr_downloaders
      - run: docker push localhost:5000/dr_downloaders
      - run: docker tag ccdl/dr_no_op localhost:5000/dr_no_op
      - run: docker push localhost:5000/dr_no_op

      # Run Foreman Tests
      - run: mkdir -p test_volume && chmod -R a+rw test_volume
      - run: ./foreman/run_tests.sh

  # This tests workers tests tagged as 'affymetrix'
  affymetrix_tests:
    working_directory: ~/refinebio
    machine: true
    steps:
      <<: *common_setup

      # Pull affy image instead of building it, hence the -p
      - run: ./workers/prepare_image.sh -p -i affymetrix

      - run:
          command: .circleci/filter_tests.sh -t affymetrix
          # This takes a while because the affymetrix image is huge
          no_output_timeout: 36000

  # This tests workers tests tagged as 'salmon'
  salmon_tests:
    working_directory: ~/refinebio
    machine: true
    steps:
      <<: *common_setup

      - run: ./workers/prepare_image.sh -i salmon

      - run:
          command: .circleci/filter_tests.sh -t salmon
          no_output_timeout: 1h


  # This tests workers tests tagged as 'illumina'
  illumina_tests:
    working_directory: ~/refinebio
    machine: true
    steps:
      <<: *common_setup

      - run: ./workers/prepare_image.sh -i illumina

      - run: .circleci/filter_tests.sh -t illumina

  # This tests workers tests tagged as 'transcriptome'
  transcriptome_tests:
    working_directory: ~/refinebio
    machine: true
    steps:
      <<: *common_setup

      - run: ./workers/prepare_image.sh -i transcriptome

      - run: .circleci/filter_tests.sh -t transcriptome

  # This tests workers tests tagged as 'downloaders'
  downloaders_tests:
    working_directory: ~/refinebio
    machine: true
    steps:
      <<: *common_setup

      - run: ./workers/prepare_image.sh -i downloaders

      - run: .circleci/filter_tests.sh -t downloaders

  deploy:
    machine: true
    working_directory: ~/refinebio
    steps:
      - checkout
      - run: bash .circleci/git_decrypt.sh
      - run: bash .circleci/update_docker_img.sh
      - run: bash .circleci/run_terraform.sh

# These workflows are designed around the fact that CircleCI is giving us 4x parallelism.
# Therefore the tests are batched into 4 flows, so that we can ensure that the slowest tests start first.
# These flows are as follows:
# - main_tests -> illumina_tests
# - trainscriptome_tests -> downloader_tests
# - salmon_tests
# - affymetrix_tests
# These could be combined at the job level rather than the workflow level and this
# would save us the time it takes to run the common_setup, however combining them
# at the workflow level means that we can rerun just a single job later if we'd like.
workflows:
  version: 2
  test-and-deploy:
    jobs:
      # test jobs will be triggered by:
      # - any branch commit, or:
      # - tag commits whose names start with letter "v".
      - main_tests:
          filters:
            # To allow tag commits whose name start with "v" to trigger
            # "test" job, an explicit "tags" filter is required here.
            tags:
              only: /v.*/
      - affymetrix_tests:
          filters:
            # To allow tag commits whose name start with "v" to trigger
            # "test" job, an explicit "tags" filter is required here.
            tags:
              only: /v.*/
      - salmon_tests:
          filters:
            # To allow tag commits whose name start with "v" to trigger
            # "test" job, an explicit "tags" filter is required here.
            tags:
              only: /v.*/
      - illumina_tests:
          # Force the main tests to be run first
          requires:
            - main_tests
          filters:
            # To allow tag commits whose name start with "v" to trigger
            # "test" job, an explicit "tags" filter is required here.
            tags:
              only: /v.*/
      - transcriptome_tests:
          filters:
            # To allow tag commits whose name start with "v" to trigger
            # "test" job, an explicit "tags" filter is required here.
            tags:
              only: /v.*/

      - downloaders_tests:
          requires:
            # Force transcriptome to be run first
            - transcriptome_tests
          filters:
            # To allow tag commits whose name start with "v" to trigger
            # "test" job, an explicit "tags" filter is required here.
            tags:
              only: /v.*/

      # "deploy" job will be triggered ONLY by tag commits whose name
      # start with letter "v".
      - deploy:
          requires:
            - main_tests
            - affymetrix_tests
            - salmon_tests
            - illumina_tests
            - transcriptome_tests
          filters:
            # No branch commit will ever trigger this job.
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
