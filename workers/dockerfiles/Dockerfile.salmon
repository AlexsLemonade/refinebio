FROM ubuntu:18.04

# Prevent tzdata from prompting us for a timezone and hanging the build.
ENV DEBIAN_FRONTEND=noninteractive

# Source: https://github.com/thisbejim/Pyrebase/issues/87#issuecomment-354452082
# For whatever reason this worked and 'en_US.UTF-8' did not.
ENV LANG C.UTF-8

RUN apt-get update
RUN apt-get install -y software-properties-common
RUN add-apt-repository ppa:apt-fast/stable
RUN add-apt-repository ppa:deadsnakes/ppa
RUN add-apt-repository ppa:savoury1/llvm-defaults-10

RUN apt-get update -qq
RUN apt-get install -y apt-fast apt-transport-https

# The packages related to R are somewhat weird, see the README for more details.
COPY workers/CRAN.gpg .
RUN apt-key add CRAN.gpg
RUN echo "deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/" \
      >> /etc/apt/sources.list.d/added_repos.list

RUN apt-fast update -qq && apt-fast install -y \
  build-essential \
  cmake \
  curl \
  cython3 \
  ed \
  git \
  libcairo-dev \
  libcurl4-openssl-dev \
  libedit-dev \
  libpq-dev \
  libssl-dev \
  libxml2-dev \
  llvm-10-dev \
  lsb-release \
  mercurial \
  pkg-config \
  python3-pip \
  python3.8 \
  python3.8-dev \
  r-base-core \
  wget

RUN rm CRAN.gpg
RUN apt-get upgrade; apt-get clean; rm -rf /var/lib/apt/lists/*
RUN ln -s /usr/bin/llvm-config-10 /usr/bin/llvm-config
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1

RUN groupadd user && useradd --create-home --home-dir /home/user -g user user
WORKDIR /home/user

# Install Salmon

# Tximport requires all experiments to be processed with the same version of Salmon to work https://github.com/AlexsLemonade/refinebio/issues/1496
# This is something that should be considered when updating salmon, because
# all samples from incomplete experiments must have salmon run on them again.
ENV SALMON_VERSION 0.13.1

RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz
RUN mkdir Salmon-${SALMON_VERSION}_linux_x86_64
# On version 0.13.1 salmon was being extracted to a folder with an all lowercase name
# the options `-C` and `--strip-components` allow us to specify the name for the resulting file
RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz -C Salmon-${SALMON_VERSION}_linux_x86_64 --strip-components 1
# Create soft link `/usr/local/bin/salmon` that points to the actual program
RUN ln -sf `pwd`/Salmon-${SALMON_VERSION}_linux_x86_64/bin/salmon /usr/local/bin/
RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz
# End Salmon installation.

# Install R dependencies.
COPY common/install_devtools.R .
RUN Rscript install_devtools.R

COPY workers/R_dependencies/tximport/dependencies.R tximport_dependencies.R
RUN Rscript tximport_dependencies.R

# Install tximport.
COPY workers/install_tximport.R .
RUN Rscript install_tximport.R

RUN pip3 install --upgrade pip
RUN pip3 install numpy

COPY workers/data_refinery_workers/processors/requirements.txt .
RUN pip3 install --ignore-installed -r requirements.txt

# Get the latest version from the dist directory.
COPY common/dist/data-refinery-common-* common/
RUN pip3 install common/$(ls common -1 | sort --version-sort | tail -1)

# Install SalmonTools.
RUN git clone https://github.com/COMBINE-lab/SalmonTools.git && cd SalmonTools && git checkout 3e6654c2c10a5225498b623056993947fa688afc
RUN cd SalmonTools && cmake . -DCMAKE_INSTALL_PREFIX=/usr/local && make install
RUN rm -rf SalmonTools

# Install sra-tools.
ENV SRA_VERSION 2.9.1
RUN wget "https://ftp.ncbi.nlm.nih.gov/sra/sdk/${SRA_VERSION}/sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz" && \
    tar zxfv sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz && \
    cp -r sratoolkit.${SRA_VERSION}-ubuntu64/bin/* /usr/bin

# Clear out the pip3 cache.
RUN rm -rf /root/.cache

ARG SYSTEM_VERSION

ENV SYSTEM_VERSION $SYSTEM_VERSION

USER user

COPY .boto .boto
COPY config/ config/
COPY workers/ .

ENTRYPOINT []
