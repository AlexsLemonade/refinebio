ARG DOCKERHUB_REPO
ARG SYSTEM_VERSION
FROM $DOCKERHUB_REPO/dr_base:$SYSTEM_VERSION

# Fail in case of an error at any stage in the pipe.
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

WORKDIR /home/user

COPY --chmod=644 workers/R/dependencies/downloaders/renv.lock .
COPY --chmod=644 common/R/renv_load.R renv_load_downloaders.R
RUN Rscript renv_load_downloaders.R

COPY --chmod=644 workers/data_refinery_workers/downloaders/requirements.txt .
RUN pip3 install --ignore-installed --no-cache-dir -r requirements.txt

# Install Aspera.
RUN <<EOF
curl -sSL https://rvm.io/mpapis.asc | gpg --import -
curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -
curl -sSL https://get.rvm.io | bash -s -- stable --gems=aspera-cli --path /home/user/rvm --ruby
EOF

USER user

ENV GNUPG_PATH=/home/user/.gnupg

RUN <<EOF
mkdir -m 700 ${GNUPG_PATH}
# Disable IPv6 to avoid "Cannot assign requested address" error.
echo "disable-ipv6" >> /home/user/.gnupg/dirmngr.conf
. /home/user/rvm/scripts/rvm
ascli conf ascp install
EOF

USER root

# Get the latest version from the dist directory.
COPY --chmod=644 common/dist/data-refinery-common-* common/
RUN <<EOF
pip3 install --ignore-installed --no-cache-dir common/$(ls common -1 | sort --version-sort | tail -1)
rm -r common
EOF

COPY --chmod=644 .boto .boto
COPY --chmod=644 workers/ .

RUN <<EOF
rm -rf /root/.cache/*
find /home/user -path ${GNUPG_PATH} -prune -type d ! -perm 755 -exec chmod 755 {} \;
EOF

ENV PATH="$PATH:/home/user/.aspera/sdk"
ENV SYSTEM_VERSION=$SYSTEM_VERSION

USER user

ENTRYPOINT []
