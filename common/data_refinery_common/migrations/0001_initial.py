# Generated by Django 2.0.2 on 2018-02-21 20:21

import django.contrib.postgres.fields.hstore
from django.contrib.postgres.operations import HStoreExtension
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('source_type', models.CharField(max_length=256)),
                ('pipeline_required', models.CharField(max_length=256)),
                ('platform_accession_code', models.CharField(max_length=32)),
                ('experiment_accession_code', models.CharField(max_length=64)),
                ('experiment_title', models.CharField(max_length=256)),
                ('status', models.CharField(max_length=20)),
                ('release_date', models.DateField()),
                ('last_uploaded_date', models.DateField()),
                ('organism_id', models.IntegerField()),
                ('organism_name', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'batches',
            },
        ),
        migrations.CreateModel(
            name='BatchKeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('key', models.CharField(max_length=256)),
                ('value', models.CharField(max_length=256)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Batch')),
            ],
            options={
                'db_table': 'batch_key_values',
            },
        ),
        migrations.CreateModel(
            name='CompultationalResultAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.hstore.HStoreField(default={})),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'computational_result_annotations',
            },
        ),
        migrations.CreateModel(
            name='ComputationalResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_executed', models.CharField(blank=True, max_length=255)),
                ('program_version', models.CharField(max_length=255)),
                ('system_version', models.CharField(max_length=255)),
                ('is_ccdl', models.BooleanField(default=True)),
                ('time_start', models.DateTimeField(blank=True, null=True)),
                ('time_end', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'computational_results',
            },
        ),
        migrations.CreateModel(
            name='ComputedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('absolute_file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('size_in_bytes', models.BigIntegerField()),
                ('sha1', models.CharField(max_length=64)),
                ('s3_bucket', models.CharField(max_length=255)),
                ('s3_key', models.CharField(max_length=255)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.ComputationalResult')),
            ],
            options={
                'db_table': 'computed_files',
            },
        ),
        migrations.CreateModel(
            name='DownloaderJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloader_task', models.CharField(max_length=256)),
                ('accession_code', models.CharField(blank=True, max_length=256, null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('success', models.NullBooleanField()),
                ('num_retries', models.IntegerField(default=0)),
                ('retried', models.BooleanField(default=False)),
                ('worker_id', models.CharField(max_length=256, null=True)),
                ('worker_version', models.CharField(max_length=128, null=True)),
                ('failure_reason', models.CharField(max_length=256, null=True)),
            ],
            options={
                'db_table': 'downloader_jobs',
            },
        ),
        migrations.CreateModel(
            name='DownloaderJobOriginalFileAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloader_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.DownloaderJob')),
            ],
            options={
                'db_table': 'downloaderjob_originalfile_associations',
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_code', models.CharField(max_length=64, unique=True)),
                ('source_database', models.CharField(max_length=32)),
                ('source_url', models.CharField(max_length=256)),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('platform_accession_code', models.CharField(max_length=256)),
                ('platform_name', models.CharField(max_length=256)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'experiments',
            },
        ),
        migrations.CreateModel(
            name='ExperimentAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Experiment')),
            ],
            options={
                'db_table': 'experiment_annotations',
            },
        ),
        migrations.CreateModel(
            name='ExperimentSampleAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Experiment')),
            ],
            options={
                'db_table': 'experiment_sample_associations',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('name', models.CharField(max_length=1024)),
                ('download_url', models.CharField(max_length=4096)),
                ('raw_format', models.CharField(max_length=256, null=True)),
                ('processed_format', models.CharField(max_length=256, null=True)),
                ('size_in_bytes', models.BigIntegerField()),
                ('internal_location', models.CharField(max_length=256, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Batch')),
            ],
            options={
                'db_table': 'files',
            },
        ),
        migrations.CreateModel(
            name='OrganismIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_type', models.CharField(max_length=255)),
                ('source_version', models.CharField(max_length=255)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'organism_index',
            },
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('taxonomy_id', models.IntegerField(unique=True)),
                ('is_scientific_name', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'organisms',
            },
        ),
        migrations.CreateModel(
            name='OriginalFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('absolute_file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('size_in_bytes', models.BigIntegerField(blank=True, null=True)),
                ('sha1', models.CharField(max_length=64)),
                ('source_url', models.CharField(max_length=255)),
                ('is_archive', models.BooleanField(default=True)),
                ('source_filename', models.CharField(max_length=255)),
                ('has_raw', models.BooleanField(default=True)),
                ('is_downloaded', models.BooleanField(default=False)),
                ('is_processed', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'original_files',
            },
        ),
        migrations.CreateModel(
            name='ProcessorJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('num_retries', models.IntegerField(default=0)),
                ('retried', models.BooleanField(default=False)),
                ('worker_id', models.CharField(max_length=256, null=True)),
                ('worker_version', models.CharField(max_length=128, null=True)),
                ('failure_reason', models.CharField(max_length=256, null=True)),
                ('pipeline_applied', models.CharField(max_length=256)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('success', models.NullBooleanField()),
                ('batches', models.ManyToManyField(to='data_refinery_common.Batch')),
                ('retried_job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='data_refinery_common.ProcessorJob')),
            ],
            options={
                'db_table': 'processor_jobs',
            },
        ),
        migrations.CreateModel(
            name='ProcessorJobOriginalFileAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.OriginalFile')),
                ('processor_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.ProcessorJob')),
            ],
            options={
                'db_table': 'processorjob_originalfile_associations',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_code', models.CharField(max_length=255, unique=True)),
                ('source_archive_url', models.CharField(max_length=255)),
                ('source_filename', models.CharField(max_length=255)),
                ('source_absolute_file_path', models.CharField(max_length=255)),
                ('has_raw', models.BooleanField(default=True)),
                ('is_downloaded', models.BooleanField(default=False)),
                ('is_processed', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('organism', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_refinery_common.Organism')),
            ],
            options={
                'db_table': 'samples',
            },
        ),
        migrations.CreateModel(
            name='SampleAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Sample')),
            ],
            options={
                'db_table': 'sample_annotations',
            },
        ),
        migrations.CreateModel(
            name='SampleResultAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.ComputationalResult')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Sample')),
            ],
            options={
                'db_table': 'sample_result_associations',
            },
        ),
        migrations.CreateModel(
            name='SurveyJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('source_type', models.CharField(max_length=256)),
                ('success', models.NullBooleanField()),
                ('replication_started_at', models.DateTimeField(null=True)),
                ('replication_ended_at', models.DateTimeField(null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'survey_jobs',
            },
        ),
        migrations.CreateModel(
            name='SurveyJobKeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField()),
                ('key', models.CharField(max_length=256)),
                ('value', models.CharField(max_length=256)),
                ('survey_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.SurveyJob')),
            ],
            options={
                'db_table': 'survey_job_key_values',
            },
        ),
        migrations.AddField(
            model_name='originalfile',
            name='sample',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Sample'),
        ),
        migrations.AddField(
            model_name='organismindex',
            name='organism',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Organism'),
        ),
        migrations.AddField(
            model_name='organismindex',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.ComputationalResult'),
        ),
        migrations.AddField(
            model_name='experimentsampleassociation',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Sample'),
        ),
        migrations.AddField(
            model_name='downloaderjoboriginalfileassociation',
            name='original_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.OriginalFile'),
        ),
        migrations.AddField(
            model_name='compultationalresultannotation',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.ComputationalResult'),
        ),
        migrations.AddField(
            model_name='batch',
            name='survey_job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='data_refinery_common.SurveyJob'),
        ),
    ]
