# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-02-08 17:53
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('data_refinery_common', '0006_auto_20171117_1915'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompultationalResultAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'computational_result_annotations',
            },
        ),
        migrations.CreateModel(
            name='ComputationalResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'computational_results',
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_code', models.CharField(max_length=64)),
                ('source_url', models.CharField(max_length=256)),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'experiments',
            },
        ),
        migrations.CreateModel(
            name='ExperimentResultAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'experiment_result_associations',
            },
        ),
        migrations.CreateModel(
            name='ExperimentSampleAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'experiment_sample_associations',
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'genes',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_code', models.CharField(max_length=255)),
                ('source_url', models.CharField(max_length=255)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.utcnow, editable=False)),
                ('last_modified', models.DateTimeField(default=datetime.datetime.utcnow)),
            ],
            options={
                'db_table': 'samples',
            },
        ),
        migrations.CreateModel(
            name='SampleAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.utcnow, editable=False)),
                ('last_modified', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_refinery_common.Sample')),
            ],
            options={
                'db_table': 'sample_annotations',
            },
        ),
        migrations.CreateModel(
            name='SampleResultAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'sample_result_associations',
            },
        ),
    ]
